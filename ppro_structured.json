[
  {
    "section": "#3rd-party-scripting-is-moving-to-uxp",
    "object_name": "3rd Party Scripting is Moving to UXP",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "#navigating-the-guide",
    "object_name": "Navigating the Guide",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "#contribution",
    "object_name": "Contribution",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "#licensing-ownership",
    "object_name": "Licensing &amp; Ownership",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "Application object",
    "description": "<p>Provides access to objects and application settings within Premiere Pro.</p> <p>The single global object is always available by its name, <code>app</code>.</p>",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "app.anywhere",
    "description": "<p>An Anywhere object, providing access to available Anywhere servers. Only available when running in Anywhere configuration (discontinued).</p>",
    "type": "<p>Anywhere object.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "app.build",
    "description": "<p>The number of the build of Premiere Pro being run.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": "<p>Get a build version of current application.</p> <pre><code>// in Adobe Premiere Pro version 14.3.1 (Build 45)...\nparseInt(app.build); // 45\n</code></pre>"
  },
  {
    "section": "application",
    "object_name": "app.encoder",
    "description": "<p>Provides access to Adobe Media Encoder (on the same system).</p> <p>Warning</p> <p><code>app.encoder</code> is broken on Premiere Pro 14.3.1 - 15 on Mac only. Fixed in 22 and up. See this discussion.</p>",
    "type": "<p>Encoder object.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "app.getAppPrefPath",
    "description": "<p>The path containing the currently active \"Adobe Premiere Pro Prefs\" file.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": "<p>Get a path to a currently active preference file</p> <pre><code>app.getAppPrefPath;\n// /Users/USERNAME/Documents/Adobe/Premiere Pro/14.0/Profile-USERNAME/\n</code></pre>"
  },
  {
    "section": "application",
    "object_name": "app.getAppSystemPrefPath",
    "description": "<p>Premiere Pro's active configuration files, not specific to a given user.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": "<p>Get a path to a currently active configuration folder</p> <pre><code>app.getAppSystemPrefPath;\n// /Library/Application Support/Adobe/Adobe Premiere Pro 2020/\n</code></pre>"
  },
  {
    "section": "application",
    "object_name": "app.getPProPrefPath",
    "description": "<p>The path containing the currently active \"Adobe Premiere Pro Prefs\" file.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": "<p>Get a path to a currently active preference file</p> <pre><code>app.getPProPrefPath;\n// /Users/USERNAME/Documents/Adobe/Premiere Pro/14.0/Profile-USERNAME/\n</code></pre>"
  },
  {
    "section": "application",
    "object_name": "app.getPProSystemPrefPath",
    "description": "<p>Premiere Pro's active configuration files, not specific to a given user.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": "<p>Get a path to a currently active configuration folder</p> <pre><code>app.getPProSystemPrefPath;\n// /Library/Application Support/Adobe/Adobe Premiere Pro 2020/\n</code></pre>"
  },
  {
    "section": "application",
    "object_name": "app.learnPanelContentDirPath",
    "description": "<p>Get the Learn panel's contents directory path.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": "<p>Get a path to a Learn panel's directory</p> <pre><code>app.learnPanelContentDirPath;\n// /Users/Shared/Adobe/Premiere Pro 2020/Learn Panel/\n</code></pre>"
  },
  {
    "section": "application",
    "object_name": "app.learnPanelExampleProjectDirPath",
    "description": "<p>Get the Learn panel's example projects directory path.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": "<p>Get a path to a Learn panel's example projects' directory</p> <pre><code>app.learnPanelExampleProjectDirPath;\n// /Users/Shared/Adobe/Premiere Pro/14.0/Tutorial/Going Home project/\n</code></pre>"
  },
  {
    "section": "application",
    "object_name": "app.metadata",
    "description": "<p>Get applications Metadata object.</p>",
    "type": "<p>Metadata object, read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "app.path",
    "description": "<p>Get a path to applications executable file.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": "<p>Get a path to applications executable file.</p> <pre><code>app.path;\n// /Applications/Adobe Premiere Pro 2020/Adobe Premiere Pro 2020.app/\n</code></pre>"
  },
  {
    "section": "application",
    "object_name": "app.production",
    "description": "<p>The currently active production.</p>",
    "type": "<p>Production object if at least 1 production is open, <code>null</code> otherwise.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "app.project",
    "description": "<p>The currently active project.</p>",
    "type": "<p>Project object.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "app.projectManager",
    "description": "<p>Provides access to project management functions within Premiere Pro.</p>",
    "type": "<p>ProjectManager object.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "app.projects",
    "description": "<p>An array referencing all open projects; <code>numProjects</code> contains size.</p>",
    "type": "<p>ProjectCollection object, read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "app.properties",
    "description": "<p>The properties object provides methods to access and modify preference values.</p>",
    "type": "<p>Properties object, read-only;</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "app.sourceMonitor",
    "description": "<p>Provides access to SourceMonitor object.</p>",
    "type": "<p>SourceMonitor object.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "app.userGuid",
    "description": "<p>A unique identifier for the currently logged-in Creative Cloud user.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "app.version",
    "description": "<p>The version of Premiere Pro, providing the API.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": "<p>Get a version of a current application  (Adobe Premiere Pro version 14.3.1 (Build 45))</p> <pre><code>app.version; // 14.3.1\n</code></pre>"
  },
  {
    "section": "application",
    "object_name": "app.enableQE()",
    "description": "<p>Enables Premiere Pro's QE DOM.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if QE DOM was enabled.</p>",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "app.getEnableProxies()",
    "description": "<p>Determines whether proxy usage is currently enabled.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>1</code> if proxies are enabled, <code>0</code> if they are not.</p>",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "app.getWorkspaces()",
    "description": "<p>Obtains an array of available workspaces as Strings.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Array of strings if successful, <code>null</code> if unsuccessful.</p>",
    "example": "<p>Get a list of available workspaces.</p> <pre><code>app.getWorkspaces();\n/* [\n    \"All Panels\",\n    \"Assembly\",\n    \"Audio\",\n    \"Color\",\n    \"Editing\",\n    \"Effects\",\n    \"Graphics\",\n    \"Learning\",\n    \"Libraries\",\n    \"Metalogging\",\n    \"Production\"\n]; */\n</code></pre>"
  },
  {
    "section": "application",
    "object_name": "app.isDocument()",
    "description": "<p>Determines whether the file at path can be opened as a Premiere Pro project.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>path</code> String A path to a file.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if file can be opened as a Premiere Pro project.</p>",
    "example": "<p>Test for valid project files</p> <pre><code>app.isDocument('~/Desktop/myProject.prproj'); // true\napp.isDocument('~/Desktop/textFile.txt');     // false\napp.isDocument('~/Desktop/footageFile.mov');  // false\napp.isDocument('~/Desktop/imageFile.mov');    // false\n</code></pre>"
  },
  {
    "section": "application",
    "object_name": "app.isDocumentOpen()",
    "description": "<p>Determines whether there are any projects currently open.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if at least 1 project is open; otherwise <code>false</code>.</p>",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "app.newProject()",
    "description": "<p>Creates a new .prproj Project object, at the specified path.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>path</code> String A full path to new project; a .prproj extension will not be added.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "app.openDocument()",
    "description": "<p>Opens the file at the specified path, as a Premiere Pro Project object.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>path</code> String Full path to the document to be opened. <code>suppressConversionDialog</code> Boolean Optional. Suppress project conversion dialog. <code>bypassLocateFileDialog</code> Boolean Optional. Bypass the locate file dialog. <code>bypassWarningDialog</code> Boolean Optional. Bypass warning dialog. <code>doNotAddToMRUList</code> Boolean Optional. Skip adding this file to the Most Recently Used List.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if file was successfully opened.</p>",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "app.openFCPXML()",
    "description": "<p>Opens an FCP XML file as a Premiere Pro Project object (specified in projPath).</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>path</code> String <code>projPath</code> String",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if file was successfully opened as a Premiere Pro Project object.</p>",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "app.quit()",
    "description": "<p>Quits Premiere Pro; user will be prompted to save any changes to Project object.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Nothing.</p>",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "app.setEnableProxies()",
    "description": "<p>Determines whether proxy usage is currently enabled.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>enabled</code> Integer <code>1</code> turns proxies on, <code>0</code> turns them off.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>1</code> if proxy enablement was changed.</p>",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "app.setExtensionPersistent()",
    "description": "<p>Whether extension with the given extensionID persists, within this session.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>extensionID</code> String Which extension to modify. <code>persistent</code> Integer Pass <code>1</code> to keep extension in memory, <code>0</code> to allow unloading.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if successful.</p>",
    "example": "<pre><code>var extensionID = 'com.adobe.PProPanel';\n// 0 - while testing (to enable rapid reload);\n// 1 - for \"Never unload me, even when not visible.\"\nvar persistent = 0;\n\napp.setExtensionPersistent(extensionID, persistent);\n</code></pre>"
  },
  {
    "section": "application",
    "object_name": "app.setScratchDiskPath()",
    "description": "<p>Specifies the path to be used for one of Premiere Pro's scratch disk paths.</p>",
    "type": "",
    "parameters": "<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>path</code></p> <p>String</p> <p>The new path to be used.</p> <p><code>scratchDiskType</code></p> <p><code>ScratchDiskType</code> enum</p> <p>Enumerated value, must be one of the following:</p> <ul> <li><code>ScratchDiskType.FirstVideoCaptureFolder</code></li> <li><code>ScratchDiskType.FirstAudioCaptureFolder</code></li> <li><code>ScratchDiskType.FirstVideoPreviewFolder</code></li> <li><code>ScratchDiskType.FirstAudioPreviewFolder</code></li> <li><code>ScratchDiskType.FirstAutoSaveFolder</code></li> <li><code>ScratchDiskType.FirstCCLibrariesFolder</code></li> <li><code>ScratchDiskType.FirstCapsuleMediaFolder</code></li> </ul>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if successful.</p>",
    "example": "<pre><code>var scratchPath = Folder.selectDialog('Choose new scratch disk folder');\nif (scratchPath &amp;&amp; scratchPath.exists) {\n    app.setScratchDiskPath(scratchPath.fsName, ScratchDiskType.FirstAutoSaveFolder);\n}\n</code></pre>"
  },
  {
    "section": "application",
    "object_name": "app.setSDKEventMessage()",
    "description": "<p>Writes a string to Premiere Pro's Events panel.</p>",
    "type": "",
    "parameters": "<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>message</code></p> <p>String</p> <p>A message to display.</p> <p><code>decorator</code></p> <p>String</p> <p>Decorator, one of:</p> <ul> <li><code>info</code></li> <li><code>warning</code></li> <li><code>error</code></li> </ul>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "app.setWorkspace()",
    "description": "<p>Set workspace as active. Use app.getWorkspaces() to get a list of all available workspaces.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>workspace</code> String The name of the workspace.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Boolean.</p>",
    "example": "<p>Activate \"Editing\" workspace.</p> <pre><code>var workspace = 'Editing';\nif (app.setWorkspace(workspace)) {\n    alert('Workspace changed to \"' + workspace + '\"');\n} else {\n    alert('Could not set \"' + workspace + '\" workspace');\n}\n</code></pre>"
  },
  {
    "section": "application",
    "object_name": "app.trace()",
    "description": "<p>Writes a string to Premiere Pro's debug console.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if trace was added.</p>",
    "example": ""
  },
  {
    "section": "application",
    "object_name": "app.getProjectViewIDs()",
    "description": "<p>Returns the view IDs of currently-open views, associated with any project.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>An array of view IDs; can be null.</p>",
    "example": "<pre><code>var allViewIDs = app.getProjectViewIDs();\nif (allViewIDs){\n    var firstOne = allViewIDs[0];\n} else {\n    // No views open.\n}\n</code></pre>"
  },
  {
    "section": "application",
    "object_name": "app.getProjectFromViewID()",
    "description": "<p>Returns the Project associated with the provided View ID.</p>",
    "type": "",
    "parameters": "<p>A View ID, obtained from <code>getProjectViewIDs</code>.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>A Project object, for the project associated with the provided View ID. Can be <code>null</code>.</p>",
    "example": "<pre><code>var allViewIDs = app.getProjectViewIDs();\nif (allViewIDs){\n    var firstOne = allViewIDs[0];\n    if (firstOne){\n        var thisProject = getProjectFromViewID(firstOne);\n        if (thisProject){\n            var name = thisProject.name;\n        } else {\n            // no project associated with that view ID.\n        }\n} else {\n    // No views open.\n}\n</code></pre>"
  },
  {
    "section": "application",
    "object_name": "app.getCurrentProjectViewSelection()",
    "description": "<p>Returns an array of ProjectItems selected, in the current active project view.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>An array of ProjectItems; can be null.</p>",
    "example": "<pre><code>var selectedItems = app.getCurrentProjectViewSelection();\nif (selectedItems){\n    var firstOne = selectedItems[0];\n} else {\n    // No projectItems selected.\n}\n</code></pre>"
  },
  {
    "section": "application",
    "object_name": "app.broadcastPrefsChanged()",
    "description": "<p>Notifies Application that preferences have changed.</p>",
    "type": "",
    "parameters": "<p>String ID of the preference that changed. (currently only listens to \"BE::PreferencesScratchDisksChanged\")</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if update was successful.</p>",
    "example": "<pre><code>app.broadcastPrefsChanged(\"BE::PreferencesScratchDisksChanged\");\n</code></pre>"
  },
  {
    "section": "collection",
    "object_name": "Collection object",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "Objects",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "Method Return Type Description <code>[]</code> Object Retrieves an object in the collection by its index number. The first object is at index 1.",
    "attributes": "Attribute Type Description <code>length</code> Integer The number of objects in the collection.",
    "returns": "",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "ComponentCollection object",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "ComponentCollection.numItems",
    "description": "<p>The number of items in a ComponentCollection.</p>",
    "type": "<p>Integer, read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "MarkerCollection object",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "MarkerCollection.numMarkers",
    "description": "<p>The count of marker objects in the project item or sequence.</p>",
    "type": "<p>Integer, read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "MarkerCollection.createMarker()",
    "description": "<p>Create a new Marker object on a project item or a sequence.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>time</code> Float A time, in seconds, where marker should be created.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Marker object if successful.</p>",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "MarkerCollection.deleteMarker()",
    "description": "<p>Remove a given marker object from a collection.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>marker</code> Marker object A marker object to remove from collection.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Boolean.</p>",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "Examples",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "MarkerCollection.getFirstMarker()",
    "description": "<p>Retrieve the first marker object, sorted by time in seconds, on a given project item or sequence.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Marker object or <code>undefined</code>.</p>",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "MarkerCollection.getLastMarker()",
    "description": "<p>Retrieve the very last marker object, sorted by time in seconds, on a given project item or sequence.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Marker object or <code>undefined</code>.</p>",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "MarkerCollection.getNextMarker()",
    "description": "<p>Get the next available marker, sorted by seconds, starting from a given one.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>currentMarker</code> Marker object A starting marker object, from which to get a next one.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Marker object or <code>undefined</code>.</p>",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "MarkerCollection.getPrevMarker()",
    "description": "<p>Get the previous available marker, sorted by seconds, starting from a given one.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>currentMarker</code> Marker object A starting marker object, from which to get a previous one.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Marker object or <code>undefined</code>.</p>",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "ProjectCollection object",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "ProjectCollection.numProjects",
    "description": "<p>The total number of projects and productions found in the Project panel.</p>",
    "type": "<p>Integer, read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "ProjectItemCollection object",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "ProjectItemCollection.numItems",
    "description": "<p>The total number of items in the active project.</p>",
    "type": "<p>Integer, read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "SequenceCollection object",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "SequenceCollection.numSequences",
    "description": "<p>The total number of sequences in the active project.</p>",
    "type": "<p>Integer, read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "TrackCollection object",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "TrackCollection.numTracks",
    "description": "<p>The total number of tracks in the sequence.</p>",
    "type": "<p>Integer, read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "TrackItemCollection object",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "collection",
    "object_name": "TrackItemCollection.numItems",
    "description": "<p>The total number of clips on a track.</p>",
    "type": "<p>Integer, read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Anywhere object",
    "description": "<p>The <code>Anywhere</code> object represents any Adobe Anywhere or Team Projects servers available.</p>",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "<p>None.</p>",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Anywhere.getAuthenticationToken()",
    "description": "<p>Retrieves an authentication token.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>A String containing the login token, or <code>0</code> if unsuccessful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Anywhere.getCurrentEditingSessionActiveSequenceURL()",
    "description": "<p>Retrieves the URL of the currently active sequence, within a production.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a String containing the asset's URL, or <code>0</code> if unsuccessful (including if there is no active sequence, or if no editing session is opened).</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Anywhere.getCurrentEditingSessionSelectionURL()",
    "description": "<p>Retrieves the URL of the currently selected single asset. Will fail if more or fewer than one item is selected.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a String containing the asset's URL, or <code>0</code> if unsuccessful (including if more or fewre than one item is selected).</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Anywhere.getCurrentEditingSessionURL()",
    "description": "<p>Retrieves the URL of the Production, currently being edited.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a String containing the production's URL, or <code>0</code> if unsuccessful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Anywhere.isProductionOpen()",
    "description": "<p>Retrieves whether an Anywhere or Team Projects production is currently open.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if a production is open; <code>false</code> if not.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Anywhere.listProductions()",
    "description": "<p>Retrieves production names, available to the current user, on the current server.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns an Array of Strings containing the names of avialable productions, or <code>0</code> if unsuccessful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Anywhere.openProduction()",
    "description": "<p>Opens the production at the specified URL.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>productionURL</code> String The url of the production to open.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Anywhere.setAuthenticationToken()",
    "description": "<p>Logs the specified email address into the server, using the provided token.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>token</code> String An authorization token. <code>emailAddress</code> String The associated email address.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Encoder object",
    "description": "<p>The <code>encoder</code> object represents Adobe Media Encoder, and is used for local rendering, outside of Premiere Pro.</p> <p>Warning</p> <p><code>app.encoder</code> is broken on Premiere Pro 14.3.1 - 15 on Mac only. Fixed in 22 and up. See here.</p>",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "<p>None.</p>",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Encoder.encodeFile()",
    "description": "<p>Makes Adobe Media Encoder render (optionally, a specified range from) the specified file, with the specified settings.</p>",
    "type": "",
    "parameters": "<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>filePath</code></p> <p>String</p> <p>A path to a file to render.</p> <p><code>outputPath</code></p> <p>String</p> <p>A path to an output file.</p> <p><code>presetPath</code></p> <p>String</p> <p>A path to a preset (.epr) file.</p> <p><code>workArea</code></p> <p>Integer</p> <p>Integer denoting work area to be used:</p> <ul> <li><code>0</code> - <code>ENCODE_ENTIRE</code></li> <li><code>1</code> - <code>ENCODE_IN_TO_OUT</code></li> <li><code>2</code> - <code>ENCODE_WORK_AREA</code></li> </ul> <p><code>removeUponCompletion</code></p> <p>Integer</p> <p>If <code>1</code>, job will be removed once complete.</p> <p><code>inPoint</code></p> <p>Time object</p> <p>A Time object, for the in point of new file.</p> <p><code>outPoint</code></p> <p>Time object</p> <p>A Time object, for the out point of new file.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a job ID as a String, for the render job added to the AME queue, or <code>0</code> if unsuccessful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Encoder.encodeProjectItem()",
    "description": "<p>Makes Adobe Media Encoder render (optionally, a specified range from) the specified ProjectItem object, with the specified settings.</p>",
    "type": "",
    "parameters": "<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>projectItem</code></p> <p>ProjectItem object</p> <p>A project item to render.</p> <p><code>outputPath</code></p> <p>String</p> <p>A path to an output file.</p> <p><code>presetPath</code></p> <p>String</p> <p>A path to a preset (.epr) file.</p> <p><code>workArea</code></p> <p>Integer</p> <p>Integer denoting work area to be used:</p> <ul> <li><code>0</code> - <code>ENCODE_ENTIRE</code></li> <li><code>1</code> - <code>ENCODE_IN_TO_OUT</code></li> <li><code>2</code> - <code>ENCODE_WORK_AREA</code></li> </ul> <p><code>removeUponCompletion</code></p> <p>Integer</p> <p>If <code>1</code>, job will be removed once complete.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a job ID as a String, for the render job added to the AME queue, or <code>0</code> if unsuccessful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Encoder.encodeSequence()",
    "description": "<p>Makes Adobe Media Encoder render the specified Sequence object, with the specified settings.</p>",
    "type": "",
    "parameters": "<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>sequence</code></p> <p>Sequence object</p> <p>A sequence to render.</p> <p><code>outputPath</code></p> <p>String</p> <p>A path to an output file.</p> <p><code>presetPath</code></p> <p>String</p> <p>A path to a preset (.epr) file.</p> <p><code>workArea</code></p> <p>Integer</p> <p>Integer denoting work area to be used:</p> <ul> <li><code>0</code> - <code>ENCODE_ENTIRE</code></li> <li><code>1</code> - <code>ENCODE_IN_TO_OUT</code></li> <li><code>2</code> - <code>ENCODE_WORK_AREA</code></li> </ul> <p><code>removeUponCompletion</code></p> <p>Integer</p> <p>If <code>1</code>, job will be removed once complete.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a job ID as a String, for the render job added to the AME queue, or <code>0</code> if unsuccessful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Encoder.launchEncoder()",
    "description": "<p>Launches Adobe Media Encoder.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Encoder.setEmbeddedXMPEnabled()",
    "description": "<p>Determines whether embedded XMP metadata, will be output.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>enabled</code> Integer Pass <code>1</code> to enable sidecar output, <code>0</code> to disable.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p> <p>Note</p> <p>Premiere Pro and Adobe Media Encoder will output sidecar XMP for some file formats, and embed XMP for most.</p> <p>The applications make this determination based on numerous factors, and there is no API control to \"force\" sidecar or embedded output, for formats which normally use \"the other approach\".</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Encoder.setSidecarXMPEnabled()",
    "description": "<p>Determines whether a sidecar file containing XMP metadata, will be output.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>enabled</code> Integer Pass <code>1</code> to enable sidecar output, <code>0</code> to disable.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Encoder.startBatch()",
    "description": "<p>Makes Adobe Media Encoder start rendering its render queue.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Marker object",
    "description": "<p>Both Project items and sequences have associated Marker objects, which represent their associated markers.</p>",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Marker.comments",
    "description": "<p>The comments within the marker.</p>",
    "type": "<p>String; read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Marker.end",
    "description": "<p>A Time object containing the value of the ending of the marker.</p>",
    "type": "<p>Time object; read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Marker.guid",
    "description": "<p>The unique identifier of the marker, created at time of instantiation.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Marker.name",
    "description": "<p>The name of the marker.</p>",
    "type": "<p>String; read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Marker.start",
    "description": "<p>A Time object containing the value of the beginning of the marker.</p>",
    "type": "<p>Time object; read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Marker.type",
    "description": "<p>The type of marker, one of:</p> <ul> <li><code>\"Comment\"</code></li> <li><code>\"Chapter\"</code></li> <li><code>\"Segmentation\"</code></li> <li><code>\"WebLink\"</code></li> </ul> <p>Note</p> <p>Premiere Pro can import some marker types which cannot be created from within Premiere Pro.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Marker.getColorByIndex()",
    "description": "<p>Gets the marker color index.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>index</code> Integer Index of the marker to be read.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns the color index as an Integer.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Marker.getWebLinkFrameTarget()",
    "description": "<p>Retrieves the frame target, from the marker's FrameTarget field.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a String containing the frame target, or <code>0</code> if unsuccessful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Marker.getWebLinkURL()",
    "description": "<p>Retrieves the URL, from the marker's URL field.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a String containing the URL, or <code>0</code> if unsuccessful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Marker.setColorByIndex()",
    "description": "<p>Sets the marker color by index. Color indices listed below.</p> <ul> <li><code>0</code> = Green</li> <li><code>1</code> = Red</li> <li><code>2</code> = Purple</li> <li><code>3</code> = Orange</li> <li><code>4</code> = Yellow</li> <li><code>5</code> = White</li> <li><code>6</code> = Blue</li> <li><code>7</code> = Cyan</li> </ul>",
    "type": "",
    "parameters": "Parameter Type Description <code>colorIndex</code> Integer Index of the color to apply to the marker. <code>markerIndex</code> Integer Index of the marker to be set.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>undefined</code>.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Marker.setTypeAsChapter()",
    "description": "<p>Sets the type of the marker to \"Chapter\".</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Marker.setTypeAsComment()",
    "description": "<p>Sets the type of the marker to \"Comment\".</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Marker.setTypeAsSegmentation()",
    "description": "<p>Sets the type of the marker to \"Segmentation\".</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Marker.setTypeAsWebLink()",
    "description": "<p>Sets the type of the marker to \"WebLink\".</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Metadata object",
    "description": "<p>add description here</p>",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Metadata.getMetadata",
    "description": "<p>add description here</p>",
    "type": "<p>String.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Metadata.addMarker()",
    "description": "<p>add description here</p>",
    "type": "",
    "parameters": "<p>add parameters here</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>add return value/type here</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Metadata.deleteMarker()",
    "description": "<p>add description here</p>",
    "type": "",
    "parameters": "<p>add parameters here</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>add return value/type here</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Metadata.setMarkerData()",
    "description": "<p>add description here</p>",
    "type": "",
    "parameters": "<p>add parameters here</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>add return value/type here</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Metadata.setMetadataValue()",
    "description": "<p>add description here</p>",
    "type": "",
    "parameters": "<p>add parameters here</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>add return value/type here</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Metadata.updateMarker()",
    "description": "<p>add description here</p>",
    "type": "",
    "parameters": "<p>add parameters here</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>add return value/type here</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Production object",
    "description": "<p>The Production object lets ExtendScript access and manipulate productions, insert projects, create new projects and bins, and move existing Production projects to Trash.</p>",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Production.name",
    "description": "<p>The name of the production.</p>",
    "type": "<p>String.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Production.path",
    "description": "<p>The path to the Production folder.</p>",
    "type": "<p>String.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Production.projects",
    "description": "<p>An array of the projects containined within the Production, which are currently open. Does not include non-open projects.</p>",
    "type": "<p>ProjectCollection object, read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Production.addProject()",
    "description": "<p>Copies a project from some other location, into the Production directory.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>srcProjectPath</code> String A path to the source project. <code>destProjectPath</code> String A destination path for added project.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Production.close()",
    "description": "<p>Closes the Production, and all open projects from within that Production.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Production.getLocked()",
    "description": "<p>Returns the lock state of a single project within the Production.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>project</code> Project object The project",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if the Project is locked, <code>false</code> if the Project is unlocked.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Production.moveToTrash()",
    "description": "<p>Moves the specified path (\"bin\") or .prproj into the Production's Trash folder.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>projectOrFolderPath</code> String A path to the source project. <code>suppressUI</code> Boolean Whether to suppress any resultant dialogues. <code>saveProject</code> Boolean Whether to save the project(s) first.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Production.setLocked()",
    "description": "<p>Sets the lock state of the specified project within the Production.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>project</code> <code>Project object</code> The project <code>locked</code> Boolean <code>True</code> for locked, <code>false</code> for unlocked.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project object",
    "description": "<p>Represents a Premiere Pro project. As of Premiere Pro 12.0, multiple projects may be open at the same time.</p>",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.activeSequence",
    "description": "<p>The currently active Sequence object, within the project.</p>",
    "type": "<p>A Sequence object, or <code>0</code> if no sequence is currently active.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.cloudProjectlocalID",
    "description": "<p>The ID of cloud project.</p>",
    "type": "<p>String; read/only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.documentID",
    "description": "<p>A unique identifier for this project, in format of <code>xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</code>.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.isCloudProject",
    "description": "<p>Check whether the project is cloud project.</p>",
    "type": "<p>Boolean; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.name",
    "description": "<p>The name of the project.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.path",
    "description": "<p>The file path of the project.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": "<p>Get a path of a curently active project</p> <pre><code>app.project.path; // /Users/USERNAME/Desktop/Project.prproj\n</code></pre>"
  },
  {
    "section": "general",
    "object_name": "Project.rootItem",
    "description": "<p>A ProjectItem object representing the \"root\" of the project.</p>",
    "type": "<p>A ProjectItem object; this will always be of type <code>ProjectItemType_BIN</code>.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.sequences",
    "description": "<p>The sequences within the project.</p>",
    "type": "<p>SequenceCollection object, read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.addPropertyToProjectMetadataSchema()",
    "description": "<p>Adds a new field of the specified type to Premiere Pro's private project metadata schema.</p>",
    "type": "",
    "parameters": "<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>propertyName</code></p> <p>String</p> <p>A name of property to be added.</p> <p><code>propertyLabel</code></p> <p>String</p> <p>A label of property to be added.</p> <p><code>propertyType</code></p> <p>Integer</p> <p>Must be one of the following:</p> <ul> <li><code>0</code> - Integer</li> <li><code>1</code> - <code>Real</code></li> <li><code>2</code> - String</li> <li><code>3</code> - Boolean</li> </ul>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if successful, <code>undefined</code> if unsuccessful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.closeDocument()",
    "description": "<p>Closes this project.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>saveFirst</code> Integer If <code>1</code>, the project will be saved before closing. <code>promptIfDirty</code> Integer If <code>1</code>, the user will be asked whether they want to save changes first.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.consolidateDuplicates()",
    "description": "<p>Invokes Premiere Pro's \"Consolidate Duplicate Footage\" functionality, as available from the UI.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.createNewSequence()",
    "description": "<p>Creates a new Sequence object with the specified ID.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>sequenceName</code> String A name of a sequence. <code>sequenceID</code> String An uniquely identifying ID for a new sequence.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a Sequence object if creation was successful, or <code>0</code> if unsuccessful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.createNewSequenceFromClips()",
    "description": "<p>Creates a new Sequence object with the given name, in the specified destination bin, and sequentially inserts project items into it.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>sequenceName</code> String Optional. A name for a new sequence. <code>arrayOfProjectItems</code> Array of ProjectItem objects An array of project items to be inserted into sequence. <code>destinationBin</code> ProjectItem object Optional. A bin to contain sequence.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns the newly-created Sequence object if successful; 0 if unsuccessful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.deleteSequence()",
    "description": "<p>Deletes the specified Sequence object from the project.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>sequence</code> Sequence object A sequence to delete.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if successful, <code>false</code> if unsuccessful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.exportAAF()",
    "description": "<p>Exports an AAF file of the specified Sequence object, using the specified settings.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>sequenceToExport</code> Sequence object A sequence to export. <code>outputPath</code> String An output path for .aaf file. <code>mixdownVideo</code> Integer If <code>1</code>, render video before export. <code>explodeToMono</code> Integer If <code>1</code>, breaks out stereo tracks to mono. <code>sampleRate</code> Integer The sample rate of output audio. <code>bitsPerSample</code> Integer The bits per sample of audio output. <code>embedAudio</code> Integer If <code>1</code>, audio is embedded, if <code>0</code>, external. <code>audioFileFormat</code> Integer <code>0</code> is AIFF, <code>1</code> is WAV. <code>trimSources</code> Integer If <code>1</code>, trim and re-encode media before export; <code>0</code> exports the entire file. <code>handleFrames</code> Integer The number of handle frames (from 0 to 1000). <code>presetPath</code> String A path to export preset (.epr) file. <code>renderAudioEffects</code> Integer If <code>1</code>, render audio effects before export. <code>includeClipCopies</code> Integer If <code>1</code>, include each copy of a clip. <code>preserveParentFolder</code> Integer If <code>1</code>, preserves the parent folder, in output.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.exportFinalCutProXML()",
    "description": "<p>Exports an FCP XML representation of the entire project, to the specified output path.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>outputPath</code> String An output path for .xml file. <code>suppressUI</code> Integer If <code>1</code>, no warnings or alerts will be shown, during the export.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.exportOMF()",
    "description": "<p>Exports an OMF file of the specified Sequence object, using the specified settings.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>sequence</code> Sequence object The sequence to be output. <code>filePath</code> String An output path for .omf file. <code>omfTitle</code> String The title of the OMF. <code>sampleRate</code> The sample rate of output audio. <code>bitsPerSample</code> The bits per sample of audio output. <code>audioEncapsulated</code> Integer If <code>1</code>, audio is embedded, if <code>0</code>, external. <code>audioFileFormat</code> Integer <code>0</code> is AIFF, <code>1</code> is WAV. <code>trimAudioFiles</code> Integer <code>1</code> means yes, trim audio files. <code>handleFrames</code> Integer Number of handle frames (from 0 to 1000). <code>includePan</code> Integer <code>1</code> means include pan info; <code>0</code> means don't.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.exportTimeline()",
    "description": "<p>Exports the currently active Sequence object, using an Export Controller plug-in with the specified name.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>exportControllerName</code> String The name of the Export Controller plug-in to be used. To use the Premiere Pro SDK example Export Controller, the value would be \"SDK Export Controller\".",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful, or an error code if not.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.getGraphicsWhiteLuminance()",
    "description": "<p>Retrieves the current graphics white luminance value, for this project.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns the currently selected graphics white value.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.getInsertionBin()",
    "description": "<p>Returns a ProjectItem object referencing the bin into which import will occur.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a ProjectItem object if successful, <code>0</code> if not.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.getProjectPanelMetadata()",
    "description": "<p>Returns the current layout of the Project panel.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a String representing the current Project panel layout, or <code>0</code> if unsuccessful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.getSharedLocation()",
    "description": "<p>Returns the path to the location to which shared files are to be copied.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a String containing the path.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.getSupportedGraphicsWhiteLuminances()",
    "description": "<p>Retrieves the supported graphics white luminance values, for this project.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns an array of graphics white settings supported by the project; Currently it returns (100, 203, 300)</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.importAEComps()",
    "description": "<p>Imports specified Compositions (by name) from the containing After Effects .aep project file. You can specify a target bin within the containing project; otherwise, the Compositions will appear in the most recently targeted bin, within this project.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>path</code> String A path to the After Effects .aep project file. <code>compNames</code> Array of strings Names of compositions within the specified project, to be imported. <code>targetBin</code> ProjectItem object Optional. The destination bin for this import.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.importAllAEComps()",
    "description": "<p>Imports specified Compositions (by name) from the containing After Effects .aep project file. You can specify a target bin within the containing project; otherwise, the Compositions will appear in the most recently targeted bin, within this project.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>path</code> String A path to After Effects .aep project file. <code>targetBin</code> ProjectItem object Optional. The destination bin for this import.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.importFiles()",
    "description": "<p>Imports media from the specified file paths.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>filePaths</code> Array of strings An array of the file paths to be imported. <code>suppressUI</code> Boolean Whether warning dialogs should be suppressed. <code>targetBin</code> ProjectItem object The bin into which the files should be imported. <code>importAsNumberedStills</code> Boolean Whether the file paths should be interpreted as a sequence of numbered stills.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if successful, <code>false</code> if not.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.importSequences()",
    "description": "<p>Imports an array of sequence objects (with specified sequenceIDs), from the specified project, into the current project.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>path</code> String A path to a project file. <code>sequenceIDs</code> Array An array of sequence IDs to import.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.isSharedLocationCopyEnabled()",
    "description": "<p>Determines whether copying to a shared location is enabled, for this project.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns  <code>true</code> if copying is enabled; <code>false</code> if not.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.newBarsAndTone()",
    "description": "<p>Creates a new Sequence object with the given name, based on the specified preset (.sqpreset file).</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>width</code> Integer <code>height</code> Integer <code>timeBase</code> A timebase for a new project item. <code>PARNum</code> Integer Pixel aspect ration numerator. <code>PARDen</code> Integer Pixel aspect ration denominator. <code>audioSampleRate</code> Audio sample rate. <code>name</code> String Name for a new project item.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a ProjectItem object for the new bars and tone, or <code>0</code> if unsuccessful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.newSequence()",
    "description": "<p>Creates a new Sequence object with the given name, based on the specified preset (.sqpreset file).</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>name</code> String Name for a new sequence. <code>pathToSequencePreset</code> String A path to a preset .sqpreset file.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a Sequence object, or <code>0</code> if unsuccessful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.openSequence()",
    "description": "<p>Makes the Sequence object with the provided sequence ID, active. This will open the sequence in the Timeline panel.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>sequenceID</code> Sequence.sequenceID A valid sequence ID that should be opened.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if successful, <code>false</code> if not.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.pauseGrowing()",
    "description": "<p>Pauses (and resumes) growing file capture.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>pause</code> Integer If <code>1</code>, growing files are enabled.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.save()",
    "description": "<p>Saves the project, at its current path.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.saveAs()",
    "description": "<p>Exports the current project to a new unique file path, opens the project from the new location, and closes the previously-opened (and identical) project.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>path</code> String A path to a new file.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful, or an error code if not.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.setEnableTranscodeOnIngest()",
    "description": "<p>Controls the enablement of transcode-upon-ingest behavior, for the given project.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>state</code> Boolean The desired state.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.setGraphicsWhiteLuminance()",
    "description": "<p>Sets the current graphics white luminance value, for this project.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>value</code> Integer The value to be used; must be a value provided by Project.getSupportedGraphicsWhiteLuminances().",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.setProjectPanelMetadata()",
    "description": "<p>Returns the current layout of the Project panel.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>layout</code> String Represents the desired Project panel layout. Note: The only known method for generating a valid layout string, is setting the Project panel as desired then using Project.getProjectPanelMetadata().",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns  <code>0</code> if unsuccessful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Project.setScratchDiskPath()",
    "description": "<p>Changes the specified scratch disk path to a new path.</p>",
    "type": "",
    "parameters": "<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>newPath</code></p> <p>String</p> <p>A new path.</p> <p><code>scratchDiskType</code></p> <p><code>ScratchDiskType</code> enum</p> <p>One of:</p> <ul> <li><code>ScratchDiskType.FirstVideoCaptureFolder</code></li> <li><code>ScratchDiskType.FirstAudioCaptureFolder</code></li> <li><code>ScratchDiskType.FirstVideoPreviewFolder</code></li> <li><code>ScratchDiskType.FirstAudioPreviewFolder</code></li> <li><code>ScratchDiskType.FirstAutoSaveFolder</code></li> <li><code>ScratchDiskType.FirstCCLibrariesFolder</code></li> <li><code>ScratchDiskType.FirstCapsuleMediaFolder</code></li> <li><code>ScratchDiskType.FirstAudioCaptureFolder</code></li> <li><code>ScratchDiskType.FirstVideoPreviewFolder</code></li> <li><code>ScratchDiskType.FirstAudioPreviewFolder</code></li> <li><code>ScratchDiskType.FirstAutoSaveFolder</code></li> <li><code>ScratchDiskType.FirstCCLibrariesFolder</code></li> <li><code>ScratchDiskType.FirstCapsuleMediaFolder</code></li> </ul>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns  <code>0</code> if unsuccessful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "ProjectManager object",
    "description": "<p>The ProjectManager object exposes Premiere Pro's Project Manager, for project consolidation, transfer and transcoding.</p>",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "ProjectManager.affectedSequences",
    "description": "<p>An Array of Sequence objects, to be exported.</p>",
    "type": "<p>Array; read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "ProjectManager.clipTranscoderOption",
    "description": "<p>The specified setting for clip transcode. Value will be one of the following:</p> <ul> <li><code>CLIP_TRANSCODE_MATCH_PRESET</code> - Transcode using the specified preset.</li> <li><code>CLIP_TRANSCODE_MATCH_CLIPS</code> - Match the clips</li> <li><code>CLIP_TRANSCODE_MATCH_SEQUENCE</code> - Match the sequence</li> </ul>",
    "type": "<p>String; read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "ProjectManager.clipTransferOption",
    "description": "<p>The specified setting for clip transfer. Value will be one of the following:</p> <ul> <li><code>CLIP_TRANSFER_COPY</code>      - Copy entire source media.</li> <li><code>CLIP_TRANSFER_TRANSCODE</code> - Transcode to default output format.</li> </ul>",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "ProjectManager.convertAECompsToClips",
    "description": "<p>If true, render dynamically-linked After Effects compositions to new media (using specified output preset).</p>",
    "type": "<p>Boolean; read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "ProjectManager.convertImageSequencesToClips",
    "description": "<p>If true, transcode image sequences to new media (using specified output preset).</p>",
    "type": "<p>Boolean; read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "ProjectManager.convertSyntheticsToClips",
    "description": "<p>If true, transcode clips from synthetic importers to new media (using specified output preset).</p>",
    "type": "<p>Boolean; read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "ProjectManager.copyToPreventAlphaLoss",
    "description": "<p>If true, includes any available alpha information into transcoded media.</p>",
    "type": "<p>Boolean; read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "ProjectManager.destinationPath",
    "description": "<p>The path to which to export the project and media.</p>",
    "type": "<p>String; read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "ProjectManager.encoderPresetFilePath",
    "description": "<p>The path to the output preset (.epr file) to be used.</p>",
    "type": "<p>String; read-write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "ProjectManager.excludeUnused",
    "description": "<p>If non-zero, exclude unused project items from the exported project.</p>",
    "type": "<p>Boolean; read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "ProjectManager.handleFrameCount",
    "description": "<p>How many frames of 'handle' footage (before and after the in and out points) of media, to include.</p>",
    "type": "<p>Integer; read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "ProjectManager.includeAllSequences",
    "description": "<p>If true, export all Sequences in the exported project.</p>",
    "type": "<p>Boolean; read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "ProjectManager.includeConformedAudio",
    "description": "<p>If true, include conformed audio files with exported project.</p>",
    "type": "<p>Boolean; read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "ProjectManager.includePreviews",
    "description": "<p>If true, include rendered preview files with exported project.</p>",
    "type": "<p>Boolean; read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "ProjectManager.renameMedia",
    "description": "<p>If true, perform renaming as part of the export process.</p>",
    "type": "<p>Boolean; read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Properties object",
    "description": "<p>add description here</p>",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "<p>None.</p>",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Properties.clearProperty()",
    "description": "<p>add description here</p>",
    "type": "",
    "parameters": "<p>add parameters here</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>add return value/type here</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Properties.doesPropertyExist()",
    "description": "<p>Checks whether a given property exists in preferences.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>property</code> String A property to check",
    "methods": "",
    "attributes": "",
    "returns": "<p>Boolean.</p>",
    "example": "<p>Check whether labels with indices 10 and 99 exist in preferences:</p> <pre><code>var property = 'BE.Prefs.LabelNames.10';\nvar exists = app.properties.doesPropertyExist(property);\nalert('Property \"' + property + '\" exists: ' + exists.toString());\n\nproperty = 'BE.Prefs.LabelNames.99';\nexists = app.properties.doesPropertyExist(property);\nalert('Property \"' + property + '\" exists: ' + exists.toString());\n</code></pre>"
  },
  {
    "section": "general",
    "object_name": "Properties.getProperty()",
    "description": "<p>Returns a property value.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>property</code> String A property to get a value for",
    "methods": "",
    "attributes": "",
    "returns": "<p>String.</p>",
    "example": "<p>Get label name at a given index:</p> <pre><code>var labelIndex = 0;\nvar property = 'BE.Prefs.LabelNames.' + labelIndex;\n\nif (app.properties.doesPropertyExist(property)) {\n    alert(app.properties.getProperty(property));\n} else {\n    alert('Property \"' + property + '\" does not exist');\n}\n</code></pre>"
  },
  {
    "section": "general",
    "object_name": "Properties.isPropertyReadOnly()",
    "description": "<p>Checks whether a given property can be overwritten by the user. Returns <code>false</code> if such property does not exist.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>property</code> String A property to check.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Boolean.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "Properties.setProperty()",
    "description": "<p>Set property value.</p> <p>Note</p> <p>For any file paths to be used in Premiere Pro's preferences, a trailing path seperator is mandatory.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>property</code> String A property to create <code>value</code> Any A value for a property <code>persistent</code> Boolean Whether if should be persistent between sessions <code>createIfNotExist</code> Boolean Should create, if such property does not exist",
    "methods": "",
    "attributes": "",
    "returns": "<p><code>null</code></p>",
    "example": "<p>Change label name:</p> <pre><code>var labelIndex = 0;\nvar property = 'BE.Prefs.LabelNamesX.' + labelIndex;\n\nvar newValue = 'Changed via Script';\nvar persistent = true;\nvar createIfNotExist = true;\n\nif (app.properties.doesPropertyExist(property)) {\n    if (app.properties.isPropertyReadOnly(property)) {\n        alert('Could not rename property \"' + property + '\" because it is read-only.');\n    } else {\n        var oldValue = app.properties.getProperty(property);\n        app.properties.setProperty(property, newValue, persistent, createIfNotExist);\n        alert('Value changed from \"' + oldValue + '\" to \"' + newValue + '\"');\n    }\n} else {\n    app.properties.setProperty(property, newValue, persistent, createIfNotExist);\n    alert('Created new property \"' + property + '\" with value \"' + newValue + '\"');\n}\n</code></pre>"
  },
  {
    "section": "general",
    "object_name": "SourceMonitor object",
    "description": "<p>The Source object represents Premiere Pro's Source monitor.</p>",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "<p>None.</p>",
    "returns": "",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "SourceMonitor.closeAllClips()",
    "description": "<p>Closes all clips in the Source monitor.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "SourceMonitor.closeClip()",
    "description": "<p>Closes the front-most clip in the Source monitor.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "SourceMonitor.getPosition()",
    "description": "<p>Retrieves the position of the Source monitor's current time indicator.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a Time object containing the position of the Source monitor's current time indicator.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "SourceMonitor.getProjectItem()",
    "description": "<p>Retrieves the project item corresponding to the media open in the Source monitor.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns projectItem if successful; null if not.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "SourceMonitor.openFilePath()",
    "description": "<p>Open a file in the Source monitor.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>path</code> String A path to the file to open.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "SourceMonitor.openProjectItem()",
    "description": "<p>Open a project item in the Source monitor.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>projectItem</code> ProjectItem object A project item to open.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "general",
    "object_name": "SourceMonitor.play()",
    "description": "<p>Begins playing back the Source monitor, at the specified playback speed.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>playbackSpeed</code> Float The playback speed.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "introduction",
    "object_name": "Changelog",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "introduction",
    "object_name": "Adobe Premiere Pro 23.0",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "introduction",
    "object_name": "Adobe Premiere Pro 15.4",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "introduction",
    "object_name": "Adobe Premiere Pro 14.0",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "introduction",
    "object_name": "Adobe Premiere Pro 13.x",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "introduction",
    "object_name": "Overview",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "introduction",
    "object_name": "Example code",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "introduction",
    "object_name": "Development and debugging tools",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "introduction",
    "object_name": "How to Execute ExtendScript in Premiere Pro",
    "description": "",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem object",
    "description": "<p>Each item in a project is a ProjectItem, including the project root.</p>",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.children",
    "description": "<p>An array of project items, contained within the specified project item.</p>",
    "type": "<p>ProjectItemCollection object, read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.getAudioChannelMapping",
    "description": "<p>The audio channel mapping currently applied to this ProjectItem.</p>",
    "type": "<p>An audioChannelMapping object.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.getOverrideColorSpaceList",
    "description": "<p>Add a description</p> <p>Returns an object, containing similar data</p> <pre><code>{\n    value: [\n        sRGB,\n        BT.601 (NTSC),\n        BT.601 (PAL),\n        BT.709,\n        BT.709 (Scene),\n        BT.2020,\n        BT.2020 (Scene),\n        BT.2100 PQ,\n        BT.2100 PQ (Scene),\n        BT.2100 HLG,\n        BT.2100 HLG (Scene),\n        DCDM XYZ,\n    ]\n};\n</code></pre>",
    "type": "<p>Javascript Object.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.name",
    "description": "<p>The name of the project item.</p>",
    "type": "<p>String; read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": "<p>Rename first project item.</p> <pre><code>var item = app.project.rootItem.children[0];\nif (item) {\n    item.name = item.name + ', updated by PProPanel.';\n} else {\n    alert('Could not rename project item');\n}\n</code></pre>"
  },
  {
    "section": "item",
    "object_name": "ProjectItem.nodeId",
    "description": "<p>A unique ID assigned to the project item, upon its addition to the project.</p> <p>Note</p> <p>Distinguish between references to the same source media.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.teamProjectsAssetId",
    "description": "<p>The Team Projects Asset ID of the project item.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.treePath",
    "description": "<p>The current project location of the project item.</p> <p>Example: <code>\\\\ProjectName.prproj\\\\Media\\\\MXF\\\\filename.mxf</code></p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.type",
    "description": "<p>One of:</p> <ul> <li><code>\"CLIP\"</code></li> <li><code>\"BIN\"</code></li> <li><code>\"ROOT\"</code></li> <li><code>\"FILE\"</code></li> </ul>",
    "type": "<p>Enumerated value; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.attachProxy()",
    "description": "<p>Attaches the media at <code>newMediaPath</code> to the project item, as either hi-res or proxy media.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>mediaPath</code> String The path to the the newly-assigned media. <code>isHiRes</code> Integer Whether the new media should be attached as the proxy <code>0</code>, or high resolution <code>1</code> media.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.canChangeMediaPath()",
    "description": "<p>Returns <code>true</code> if Premiere Pro can change the path, associated with this project item; otherwise, returns <code>false</code>.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Boolean; <code>true</code> if media can be replaced, <code>false</code> if not.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.canProxy()",
    "description": "<p>Indicates whether it's possible to attach a proxy, to this project item.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if the project item permits a proxy to be attached; <code>false</code> if not.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.changeMediaPath()",
    "description": "<p>Updates the project item to point to a new media path.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>newPath</code> String A new path to the media file. <code>overrideChecks</code> Boolean Override any safety concerns.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if replacement was successful.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.clearOutPoint()",
    "description": "<p>Clears any assigned out point; the project item will then start at <code>startTime</code>.</p>",
    "type": "",
    "parameters": "<p>None</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.createBin()",
    "description": "<p>Creates an empty bin, within the project item. Only works within bins.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>name</code> String A name of a new bin.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a project item representing the new bin if successful, or <code>0</code> if unsuccessful.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.createSmartBin()",
    "description": "<p>Creates a search bin; only works for bin project items.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>name</code> String A name of a new bin. <code>queryString</code> String Query string for search.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a projectItem representing the newly-created bin, if successful.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.createSubClip()",
    "description": "<p>Creates a new project item for a sub-clip of the existing project item.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>name</code> String A name of a new subclip. <code>startTime</code> String Start time of subclip, in ticks. <code>endTime</code> String End time of subclip, in ticks. <code>hasHardBoundaries</code> Integer If <code>1</code>, the user cannot extend in and out. <code>takeVideo</code> Integer If <code>1</code>, use video from source. <code>takeAudio</code> Integer If <code>1</code>, use audio from source.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a project item representing the new subclip, or 0 if creation failed.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.deleteBin()",
    "description": "<p>Deletes a bin and all its contents from the project.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if deletion was successful.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.findItemsMatchingMediaPath()",
    "description": "<p>Returns an array of project items, all of which reference the same media path.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>pathToMatch</code> String A path to match. <code>ignoreSubClips</code> Integer If <code>1</code>, no subclips will be returned.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns an array of project items, or <code>0</code> if no project items matching the <code>matchPath</code> were found.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.getColorLabel()",
    "description": "<p>Retrieves the project item's color label.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Integer, one of:</p> <ul> <li><code>0</code> = Violet</li> <li><code>1</code> = Iris</li> <li><code>2</code> = Caribbean</li> <li><code>3</code> = Lavender</li> <li><code>4</code> = Cerulean</li> <li><code>5</code> = Forest</li> <li><code>6</code> = Rose</li> <li><code>7</code> = Mango</li> <li><code>8</code> = Purple</li> <li><code>9</code> = Blue</li> <li><code>10</code> = Teal</li> <li><code>11</code> = Magenta</li> <li><code>12</code> = Tan</li> <li><code>13</code> = Green</li> <li><code>14</code> = Brown</li> <li><code>15</code> = Yellow</li> </ul>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.getColorSpace()",
    "description": "<p>Retrieves the project item's colorspace properties.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns an item's colorspace properties, an object consisting of:</p> <ul> <li><code>name</code></li> <li><code>transferCharacteristic</code></li> <li><code>primaries</code></li> <li><code>matrixEquation</code></li> </ul>",
    "example": "<p>this will write the above info to the Events panel.</p> <pre><code>var colorSpace = app.project.rootItem.children[0].getColorSpace()\napp.setSDKEventMessage(\"Color Space \" + \" = \" + colorSpace.name, 'info');\napp.setSDKEventMessage(\"Transfer Characteristic \" + \" = \" + colorSpace.transferCharacteristic, 'info');\napp.setSDKEventMessage(\"Color Primaries \" + \" = \" + colorSpace.primaries, 'info');\napp.setSDKEventMessage(\"Matrix Equation \" + \" = \" + colorSpace.matrixEquation, 'info');\n</code></pre>"
  },
  {
    "section": "item",
    "object_name": "ProjectItem.getOriginalColorSpace()",
    "description": "<p>Retrieves the project item's colorspace properties .</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns an item's colorspace properties, an object consisting of:</p> <ul> <li><code>name</code></li> <li><code>transferCharacteristic</code></li> <li><code>primaries</code></li> <li><code>matrixEquation</code></li> </ul>",
    "example": "<p>See ProjectItem.getColorSpace()</p>"
  },
  {
    "section": "item",
    "object_name": "ProjectItem.getEmbeddedLUTID()",
    "description": "<p>Retrieves the project item's LUTID .</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns an item's LUTID</p>",
    "example": "<p>Writes LUTID to Events panel.</p> <pre><code>var lutID = app.project.rootItem.children[0].getEmbeddedLUTID()\napp.setSDKEventMessage(\"LutID \" + \" = \" + lutID, 'info');\n</code></pre>"
  },
  {
    "section": "item",
    "object_name": "ProjectItem.getInputLUTID()",
    "description": "<p>Retrieves the project item's Input LUTID .</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns an item's Input LUTID</p>",
    "example": "<p>Writes Input LUTID to Events panel.</p> <pre><code>var lutID = app.project.rootItem.children[0].getInputLUTID()\napp.setSDKEventMessage(\"Input LutID \" + \" = \" + inputLutID, 'info');\n</code></pre>"
  },
  {
    "section": "item",
    "object_name": "ProjectItem.getFootageInterpretation()",
    "description": "<p>Returns a structure describing the current interpretation of the projectItem.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>A footage interpretation structure, or <code>0</code> if unsuccessful.</p> <p>Property</p> <p>Type</p> <p>Description</p> <p><code>alphaUsage</code></p> <p>Integer</p> <p>Alpha, will be one of:</p> <ul> <li><code>0</code> - <code>ALPHACHANNEL_NONE</code></li> <li><code>1</code> - <code>ALPHACHANNEL_STRAIGHT</code></li> <li><code>2</code> - <code>ALPHACHANNEL_PREMULTIPLIED</code></li> <li><code>3</code> - <code>ALPHACHANNEL_IGNORE</code></li> </ul> <p><code>fieldType</code></p> <p>Integer</p> <p>Field type, one of:</p> <ul> <li><code>-1</code> - <code>FIELDTYPE_DEFAULT</code></li> <li><code>0</code> - <code>FIELDTYPE_PROGRESSIVE</code></li> <li><code>1</code> - <code>FIELDTYPE_UPPERFIRST</code></li> <li><code>2</code> - <code>FIELDTYPE_LOWERFIRST</code></li> </ul> <p><code>ignoreAlpha</code></p> <p>Boolean</p> <p><code>true</code> or <code>false</code>.</p> <p><code>invertAlpha</code></p> <p>Boolean</p> <p><code>true</code> or <code>false</code>.</p> <p><code>frameRate</code></p> <p>Float</p> <p>Frame rate as floating point value.</p> <p><code>pixelAspectRatio</code></p> <p>Float</p> <p>Pixel aspect ratio as floating point value.</p> <p><code>removePulldown</code></p> <p>Boolean</p> <p><code>true</code> or <code>false</code>.</p> <p><code>vrConformProjectionType</code></p> <p>Integer</p> <p>The projection type in use, for VR footage. One of</p> <ul> <li><code>0</code> - <code>VR_CONFORM_PROJECTION_NONE</code></li> <li><code>1</code> - <code>VR_CONFORM_PROJECTION_EQUIRECTANGULAR</code></li> </ul> <p><code>vrLayoutType</code></p> <p>Integer</p> <p>The layout of footage in use, for VR. One of</p> <ul> <li><code>0</code> - <code>VR_LAYOUT_MONOSCOPIC</code></li> <li><code>1</code> - <code>VR_LAYOUT_STEREO_OVER_UNDER</code></li> <li><code>2</code> - <code>VR_LAYOUT_STEREO_SIDE_BY_SIDE</code></li> </ul> <p><code>vrHorizontalView</code></p> <p>String</p> <p>The horizontal view in use, for VR footage.</p> <p><code>vrVerticalView</code></p> <p>String</p> <p>The vertical view in use, for VR footage.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.getInPoint()",
    "description": "<p>Obtains the current project item in point.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>A Time object, containing the in point.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.getMarkers()",
    "description": "<p>Retrieves the MarkerCollection object associated with this project item.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>MarkerCollection object, read-only;</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.getMediaPath()",
    "description": "<p>Returns the path associated with the project item's media, as a String.</p> <p>Note</p> <p>This only works for atomic media; this call cannot provide meaningful paths for media which has no actual path (which will be the case for any media generated by synthetic importers, like Premiere Pro's own Universal Counting Leader).</p> <p>Also, for image sequences, only the path to the first image in the sequence will be returned.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>A String containing the path to the media associate with the project item.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.getOutPoint()",
    "description": "<p>Retrieves the current out point for specified media type.</p>",
    "type": "",
    "parameters": "<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>mediaType</code></p> <p>Integer</p> <p>Pass <code>1</code> for video only, or <code>2</code> for audio only.</p> <p>If no <code>mediaType</code> is passed, function gets the out point for all media.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a Time object.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.getProjectMetadata()",
    "description": "<p>Retrieves metadata associated with the project item. Distinct from media XMP.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>A String containing all Premiere Pro private project metadata, serialized.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.getProjectColumnsMetadata()",
    "description": "<p>Returns a JSON string to the user with all the metadata from the current project view layout</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>A JSON string that can be parsed with JSON.parse() method in the Javascript layer.</p> <p>This generates a list of objects, each object representing a column. Each object will contain 4 key/value pairs: <code>ColumnName</code>, <code>ColumnValue</code>, <code>ColumnID</code>, <code>ColumnPath</code>.</p> <ul> <li><code>ColumnName</code> and <code>ColumnValue</code> serve as informational key/value.</li> <li><code>ColumnID</code> and <code>ColumnPath</code> can be used to modify that column via the method setProjectMetadata() or setXMPMetadata().</li> </ul> <p>For example:</p> Key Value Description <code>ColumnName</code> <code>\"Name\"</code> Name of the column <code>ColumnValue</code> <code>\"A014C003_180620_R205.mov\"</code> Example of colummn value <code>ColumnID</code> <code>\"Column.Intrinsic.Name\"</code> ID of the colummn <code>ColumnPath</code> <code>\"http://ns.adobe.com/premierePrivateProjectMetaData/1.0/\"</code> Path of the column",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.getProxyPath()",
    "description": "<p>Retrieves the path to the proxy media associated with this project item.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns the path (as String) to the proxy media associated with the proxy item, or <code>0</code> if none is found.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.getXMPMetadata()",
    "description": "<p>Retrieves the XMP metadata associated with the project item, as a String.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>A String containing all XMP metadata, serialized.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.hasProxy()",
    "description": "<p>Indicates whether a proxy has already been attached, to the project item.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if the project item has a proxy attached; <code>false</code> if not.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.isMergedClip()",
    "description": "<p>Indicates whether the project item refers to a merged clip.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if the project item is a merged clip, <code>false</code> if it isn't.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.isMulticamClip()",
    "description": "<p>Indicates whether the project item refers to a multicam clip.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if the project item is a multicam clip, <code>false</code> if it isn't.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.isOffline()",
    "description": "<p>Returns a Boolean indicating whether the project item is offline.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Boolean, <code>true</code> if offline.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.isSequence()",
    "description": "<p>Indicates whether the project item refers to a Sequence object.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if the project item is a Sequence object, or a multicam clip, or a merged clip. Returns <code>false</code> if it isn't any of those.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.moveBin()",
    "description": "<p>Moves the projectItem into a new parent bin.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if move was successful.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.refreshMedia()",
    "description": "<p>Forces Premiere Pro to update its representation of the media associated with the project item. If the media was previously off-line, this can cause it to become online (if previously missing media has become available).</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>An array of markers associated with the project item, or <code>0</code> if there are no markers.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.renameBin()",
    "description": "<p>Changes name of bin. Only works on project items which are bins.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>newName</code> String A new bin name.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if renaming bin was successful.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.select()",
    "description": "<p>Sets the project item (which must be a bin), as the target for subsequent imports into the project.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if the project item has successfully been made the target, for subsequent imports.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.setColorLabel()",
    "description": "<p>Sets the project item's color label.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>labelColor</code> Integer A label color; see ProjectItem.getColorLabel().",
    "methods": "",
    "attributes": "",
    "returns": "<p><code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.setFootageInterpretation()",
    "description": "<p>Returns a structure describing the current interpretation of the projectItem.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>interpretation</code> A footage interpretation structure.",
    "methods": "",
    "attributes": "",
    "returns": "<p><code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.setInPoint()",
    "description": "<p>Sets the in point to <code>timeInTicks</code>, for specified media types.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>time</code> String A time in ticks. <code>mediaType</code> Integer Determining which media type to affect; pass <code>1</code> for video only, <code>2</code> for audio only, or <code>4</code> for all media types.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.setOffline()",
    "description": "<p>Makes the project item offline.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p><code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.setOutPoint()",
    "description": "<p>Sets the out point to <code>timeInTicks</code>, for specified media types.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>time</code> String A time in ticks. <code>mediaType</code> Integer Determining which media type to affect; pass <code>1</code> for video only, <code>2</code> for audio only, or <code>4</code> for all media types.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.setOverrideFrameRate()",
    "description": "<p>Sets the frame rate of the project item.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>newFrameRate</code> Float The new frame rate.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if the frame rate has successfully been changed.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.setOverridePixelAspectRatio()",
    "description": "<p>Sets the pixel aspect ratio for the project item.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>numerator</code> Integer A new numerator. <code>denominator</code> Integer A new denominator.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if the aspect ratio has successfully been changed.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.setProjectMetadata()",
    "description": "<p>Sets the private project metadata associated with the project item.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>newMetadata</code> String A new, serialized private project metadata. <code>updatedFields</code> Array of strings An array containing the names of the fields to be updated.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if update was successful.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.setScaleToFrameSize()",
    "description": "<p>Turns on scaling to frame size, for when media from this project item is inserted into a sequence.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Undefined return value.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.setStartTime()",
    "description": "<p>Assigns a new start time to the project item</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>time</code> String A new starting time, represented in ticks.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.setXMPMetadata()",
    "description": "<p>Sets the XMP metadata associated with the project item.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>newXMP</code> String A new, serialized XMP metadata.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if update was successful.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.startTime()",
    "description": "<p>Returns a Time object, representing start time.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Time object.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "ProjectItem.videoComponents()",
    "description": "<p>Video components for the 'Master Clip' of this project item.</p>",
    "type": "<p>ComponentCollection object, read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem object",
    "description": "<p>The TrackItem object represents an item on a video or audio track, within a Sequence object.</p>",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.components",
    "description": "<p>The components associated with this trackItem. This can include intrinsic transformations, as well as video and audio effects.</p>",
    "type": "<p>ComponentCollection object, read-only;</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.duration",
    "description": "<p>The duration of the trackItem.</p>",
    "type": "<p>Time object, read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.end",
    "description": "<p>The visible end time of the trackItem in the sequence, relative to the beginning of its corresponding sequence (NOT the sequence zero point).</p> <p>Note</p> <p>This may differ from the trackItem's out point, which is relative to the source.</p>",
    "type": "<p>Time object, read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.inPoint",
    "description": "<p>The in point set on the source for this trackItem instance, relative to the beginning of the source.</p>",
    "type": "<p>Time object, read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.matchName",
    "description": "<p>Add a description</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.mediaType",
    "description": "<p>The mediaType of media provided by this trackItem.</p>",
    "type": "<p>String, one of:</p> <ul> <li><code>\"Audio\"</code></li> <li><code>\"Video\"</code></li> </ul>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.name",
    "description": "<p>The name of the track item.</p>",
    "type": "<p>String; read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.nodeId",
    "description": "<p>Add a description</p>",
    "type": "<p>String.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.outPoint",
    "description": "<p>The out point set on the source for this TrackItem instance, relative to the beginning of the source.</p>",
    "type": "<p>Time object, read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.projectItem",
    "description": "<p>The ProjectItem object from which the media is being drawn.</p>",
    "type": "<p>A ProjectItem object.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.start",
    "description": "<p>The visible start time of the trackItem in the sequence, relative to the beginning of its corresponding sequence (NOT the sequence zero point). Note: This may differ from the trackItem's in point, which is relative to the source.</p>",
    "type": "<p>Time object, read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.type",
    "description": "<p>The type of media provided by this trackItem.</p>",
    "type": "<p>Number, <code>1</code> means video, <code>2</code> means audio.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.getMGTComponent()",
    "description": "<p>Adds an After Effects Motion Graphics Template - a Mogrt - to the selected track at the specified time.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>mogrtPath</code> String Full path to a valid .mogrt, created in After Effects <code>targetTime</code> String The time at which to insert the .mogrt, in ticks <code>vidTrackOffset</code> Integer The offset from 0 (the first available track), on which to insert video from the .mogrt <code>audTrackOffset</code> Integer The offset from 0 (the first available track), on which to insert audio from the .mogrt",
    "methods": "",
    "attributes": "",
    "returns": "<p>A Component object representing the parameters of the .mogrt, which the creator has exposed.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.getSpeed()",
    "description": "<p>Returns the speed multiplier applied to the TrackItem.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns the speed multiplier applied to the TrackItem, as a Float. No speed adjustment = <code>1</code>.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.isAdjustmentLayer()",
    "description": "<p>Returns wheter the TrackItem is an adjustment layer.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if the trackitem is an adjustment layer; <code>false</code> if not.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.isSpeedReversed()mm",
    "description": "<p>Returns whether the trackItem is reversed.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>1</code> if TrackItem is reversed; <code>0</code> if not.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.isSelected()",
    "description": "<p>Retrieves the current selection state of the trackItem.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if trackItem is selected; <code>false</code> if not.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.setSelected()",
    "description": "<p>Sets the selection state of the trackItem.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>state</code> Integer If <code>1</code>, the track item will be selected; if <code>0</code>, it will be deselected. <code>updateUI</code> Integer If <code>1</code>, the Premiere Pro UI will be updated after this function call is made.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.getMatchName()",
    "description": "<p>Retrieves the match name for the trackItem.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns the match name as a String if successful.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.remove()",
    "description": "<p>Sets the selection state of the trackItem.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>inRipple</code> Boolean If <code>1</code>, later track items will be moved earlier, to fill the gap; if <code>0</code>, later track items will remain in place. <code>inAlignToVideo</code> Boolean If <code>1</code>, Premiere Pro will align moved track items to the start of the nearest video frame.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.disabled",
    "description": "<p>Sets the disabled state of the TrackItem. Read/Write.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>newDisableState</code> Boolean If <code>true</code>, this TrackItem will be disabled; if <code>false</code>, TrackItem will be enabled.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "item",
    "object_name": "TrackItem.move()",
    "description": "<p>Moves the inPoint of the track item to a new time, by shifting it by a number of seconds.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>newInPoint</code> Time object A Time object that represent the amount of time, in seconds, to shift the track item's start.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "other",
    "object_name": "AudioChannelMapping object",
    "description": "<p>The AudioChannelMapping object defines the audio channel mapping applied to a given ProjectItem object.</p>",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "other",
    "object_name": "AudioChannelMapping.audioChannelsType",
    "description": "<p>The type of the audio contained in this channel. Will be <code>0</code>, <code>1</code> or <code>2</code>, corresponding to <code>AUDIOCHANNELTYPE_Mono</code>, <code>AUDIOCHANNELTYPE_Stereo</code>, or <code>AUDIOCHANNELTYPE_51</code>.</p>",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "other",
    "object_name": "AudioChannelMapping.audioClipsNumber",
    "description": "<p>The number of audio clips associated with this audio channel.</p>",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "other",
    "object_name": "AudioChannelMapping.setMappingForChannel()",
    "description": "<p>Maps a source channel to the specified channel index.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>channelIndex</code> Integer The index of a channel to be mapped. <code>sourceChannelIndex</code> Integer The index of a source channel to map.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if successful, <code>false</code> if that mapping is unsupported.</p>",
    "example": ""
  },
  {
    "section": "other",
    "object_name": "Time object",
    "description": "<p>An object representing a time. Internally, the time is computed in <code>ticks</code>; there are 254016000000 ticks per second. That time can be accessed in different representations, including as a timecode string.</p>",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "other",
    "object_name": "Time.seconds",
    "description": "<p>The time value, expressed in seconds.</p>",
    "type": "<p>Number.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "other",
    "object_name": "Time.ticks",
    "description": "<p>The time value, expressed in ticks.</p>",
    "type": "<p>String.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "other",
    "object_name": "Time.getFormatted()",
    "description": "<p>Returns the value of the <code>Time</code> passed, as a string, formatted in the specified display format.</p>",
    "type": "",
    "parameters": "<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>frameRate</code></p> <p>Time object</p> <p>Time object with a duration of a single frame of the frame rate to be used.</p> <p><code>displayFormat</code></p> <p>Integer</p> <p>The display format to use. One of:</p> <ul> <li><code>TIMEDISPLAY_24Timecode = 100;</code></li> <li><code>TIMEDISPLAY_25Timecode = 101;</code></li> <li><code>TIMEDISPLAY_2997DropTimecode = 102;</code></li> <li><code>TIMEDISPLAY_2997NonDropTimecode = 103;</code></li> <li><code>TIMEDISPLAY_30Timecode = 104;</code></li> <li><code>TIMEDISPLAY_50Timecode = 105;</code></li> <li><code>TIMEDISPLAY_5994DropTimecode = 106;</code></li> <li><code>TIMEDISPLAY_5994NonDropTimecode = 107;</code></li> <li><code>TIMEDISPLAY_60Timecode = 108;</code></li> <li><code>TIMEDISPLAY_Frames = 109;</code></li> <li><code>TIMEDISPLAY_23976Timecode = 110;</code></li> <li><code>TIMEDISPLAY_16mmFeetFrames = 111;</code></li> <li><code>TIMEDISPLAY_35mmFeetFrames = 112;</code></li> <li><code>TIMEDISPLAY_48Timecode = 113;</code></li> <li><code>TIMEDISPLAY_AudioSamplesTimecode = 200;</code></li> <li><code>TIMEDISPLAY_AudioMsTimecode = 201;</code></li> </ul>",
    "methods": "",
    "attributes": "",
    "returns": "<p>String.</p>",
    "example": ""
  },
  {
    "section": "other",
    "object_name": "Time.setSecondsAsFraction()",
    "description": "<p>Sets the Time object to the result of dividing the numerator by the denominator.</p>",
    "type": "",
    "parameters": "<p>Both the numerator and the denominator are integers.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Boolean; <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Component object",
    "description": "<p>The Component object represents something which has been added or applied to a trackItem.</p>",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Component.displayName",
    "description": "<p>The name of the component, as it is displayed to the user. Localized.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Component.matchName",
    "description": "<p>The name of the component, as it is loaded from disk; used to uniquely identify effect plug-ins.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Component.properties",
    "description": "<p>The properties of the component in question; typically, these are effect parameters.</p>",
    "type": "<p>Array of components, read-only; (ComponentParamCollection object).</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "ComponentParam object",
    "description": "<p>The ComponentParam object represents a parameter associated with a component, applied to a TrackItem object.</p> <p>Note</p> <p>For a developer working across different localizations, it's possible to find the corresponding keys by comparing ZStrings.</p> <p>Below is an example between En and De. Here are the paths to the files: <code>C:\\Program Files\\Adobe\\Adobe Premiere Pro 2024\\Dictionaries\\de_DE\\zdictionary_PPRO_de_DE.dat</code> - (\"…anti-Flimmer Filter\") <code>C:\\Program Files\\Adobe\\Adobe Premiere Pro 2024\\Dictionaries\\en_DE\\zdictionary_PPRO_en_US.dat</code> - (\"…anti-flicker Filter\")</p>",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "ComponentParam.displayName",
    "description": "<p>The name of the component parameter, as it is displayed to the user. Localized.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "ComponentParam.addKey()",
    "description": "<p>Adds a keyframe to the component parameter stream, at the specified time. Note: This can only be set on parameters which support keyframing.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>time</code> Time object When the keyframe should be added.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "ComponentParam.areKeyframesSupported()",
    "description": "<p>Retrieves whether keyframes are supported, for this component parameter.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if keyframes are supported; <code>false</code> if not.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "ComponentParam.findNearestKey()",
    "description": "<p>Sets whether the component parameter varies, over time. Note: This can only be set on parameters which support keyframing.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>timeToCheck</code> Start search from a given time <code>threshold</code> Integer A temporal distance, in either direction, in ticks.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a Time value, indicating when the closest keyframe is.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "ComponentParam.findNextKey()",
    "description": "<p>Returns the keyframe temporally subsequent to the provided <code>timeToCheck</code>. Note: This can only be set on parameters which support keyframing.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>timeToCheck</code> Start search from a given time.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a Time value, indicating when the closest keyframe is, or <code>0</code> if there is no available subsequent keyframe.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "ComponentParam.findPreviousKey()",
    "description": "<p>Returns the keyframe temporally previous to the provided <code>timeToCheck</code>. Note: This can only be set on parameters which support keyframing.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>timeToCheck</code> Start search from a given time.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a Time value, indicating when the closest keyframe is, or <code>0</code> if there is no available previous keyframe.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "ComponentParam.getColorValue()",
    "description": "<p>Obtains the value of the component parameter stream. Note: This can only work on parameters which are not time-variant.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a Color containing the values found in the component parameter stream, or <code>0</code> if unsuccessful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "ComponentParam.getKeys()",
    "description": "<p>Returns an array of all keyframes on the <code>timeToCheck</code> component parameter. Note: This can only be set on parameters which support keyframing.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns an array of Time values, indicating at what time each keyframe occurs, or <code>0</code> if no keyframes are available.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "ComponentParam.getValue()",
    "description": "<p>Obtains the value of the component parameter stream. Note: This can only work on parameters which are not time-variant.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns the value of the component parameter stream; the return varies with stream type.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "ComponentParam.getValueAtKey()",
    "description": "<p>Retrieves the value of the component parameter stream, at the specified keyframe time. Note: Can only be used with keyframeable parameter streams.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>time</code> Time object A time from which the keyframe value should be retrieved.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns the value of the component parameter stream at <code>time</code>, or <code>0</code> if unsuccessful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "ComponentParam.getValueAtTime()",
    "description": "<p>Retrieves the value of the component parameter stream, at the specified time. If the value is between two keyframes then interpolation takes place.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>time</code> Time object A time from which the keyframe value should be retrieved.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns the value of the component parameter stream at <code>time</code>, or <code>0</code> if unsuccessful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "ComponentParam.isTimeVarying()",
    "description": "<p>Retrieves whether the component parameter varies, over time.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if the parameter varies over time; <code>false</code> if not.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "ComponentParam.removeKey()",
    "description": "<p>Removes a keyframe on the component parameter stream, at the specified time. Note: This can only be set on parameters which support keyframing.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>time</code> Time object A time value, indicating when the keyframe should be removed.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "ComponentParam.removeKeyRange()",
    "description": "<p>Removes all keyframes from the component parameter stream, between the specified times. Note: This can only be set on parameters which support keyframing.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>startTime</code> Time object The times (inclusive) to begin the removal of keyframes. <code>endTime</code> Time object The times to end the removal of keyframes.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "ComponentParam.setColorValue()",
    "description": "<p>Sets the values within a component parameter stream, representing a Color.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>alpha</code> Integer Alpha value. <code>red</code> Integer Red value. <code>green</code> Integer Green value. <code>blue</code> Integer Blue value. <code>updateUI</code> Integer If <code>1</code>, will force Premiere Pro to update UI, after updating the value of the stream.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "ComponentParam.setInterpolationTypeAtKey()",
    "description": "<p>Specifies the interpolation type to be assigned to the keyframe, at the specified time. Note: It Can only be used with keyframeable parameter streams.</p>",
    "type": "",
    "parameters": "<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>time</code></p> <p>Time object</p> <p>A time of keyframe to modify.</p> <p><code>interpolationType</code></p> <p>Interpolation Type Enum</p> <p>One of:</p> <ul> <li><code>0</code> - <code>KF_Interp_Mode_Linear</code></li> <li><code>1</code> - <code>kfInterpMode_EaseIn_Obsolete</code></li> <li><code>2</code> - <code>kfInterpMode_EaseOut_Obsolete</code></li> <li><code>3</code> - <code>kfInterpMode_EaseInEaseOut_Obsolete</code></li> <li><code>4</code> - <code>KF_Interp_Mode_Hold</code></li> <li><code>5</code> - <code>KF_Interp_Mode_Bezier</code></li> <li><code>6</code> - <code>KF_Interp_Mode_Time</code></li> <li><code>7</code> - <code>kfInterpMode_TimeTransitionStart</code></li> <li><code>8</code> - <code>kfInterpMode_TimeTransitionEnd</code></li> </ul> <p><code>updateUI</code></p> <p>Boolean</p> <p>Whether to update UI afterward.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "ComponentParam.setTimeVarying()",
    "description": "<p>Sets whether the component parameter varies, over time. Note: This can only be set on parameters which support keyframing.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>varying</code> Boolean If <code>true</code>, component parameter will vary over time; if <code>false</code>, it won't.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "ComponentParam.setValue()",
    "description": "<p>Sets the value of the component parameter stream. Note: This can only work on parameters which are not time-variant.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>value</code> Must be of the appropriate type for the component parameter stream. <code>updateUI</code> Integer If <code>1</code>, will force Premiere Pro to update UI, after updating the value of the stream.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "ComponentParam.setValueAtKey()",
    "description": "<p>Sets the value of the component parameter stream, at the specified keyframe time. Note: Can only be used with keyframeable parameter streams.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>time</code> Time object A time at which the keyframe value should be set. <code>value</code> A value to be set. <code>updateUI</code> Integer If <code>1</code>, will force Premiere Pro to update UI, after updating the value of the stream.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence object",
    "description": "<p>The Sequence object represents sequences of media, or 'timelines', in Premiere Pro.</p>",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.audioDisplayFormat",
    "description": "<p>The audio display format of the sequence.</p> <p>Set this attribute with the Sequence.setSettings() method.</p>",
    "type": "<p>An enumerated value; read/write. One of:</p> <ul> <li><code>200</code> - Audio Samples</li> <li><code>201</code> - Milliseconds</li> </ul>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.audioTracks",
    "description": "<p>An array of audio Track objects in the sequence.</p>",
    "type": "<p>TrackCollection object; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.end",
    "description": "<p>The time, in ticks, of the end of the sequence.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.frameSizeHorizontal",
    "description": "<p>The horizontal frame size, or width, of the sequence.</p> <p>Set this attribute with the Sequence.setSettings() method.</p>",
    "type": "<p>Integer; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.frameSizeVertical",
    "description": "<p>The vertical frame size, or height, of the sequence.</p> <p>Set this attribute with the Sequence.setSettings() method.</p>",
    "type": "<p>Integer; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.id",
    "description": "<p>This is the ordinal assigned to the sequence upon creation.</p> <p>If this is the thirty-third sequence created within the project during a given Premiere Pro session, this value will be <code>33</code>.</p> <p>Note</p> <p>In testing, this attribute seems unstable and produces unreliable results. Recommend using Sequence.sequenceID instead.</p>",
    "type": "<p>Integer, read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.markers",
    "description": "<p>An array of Marker objects in the sequence.</p>",
    "type": "<p>MarkerCollection object, read-only;</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.name",
    "description": "<p>The name of the sequence.</p>",
    "type": "<p>String; read/write.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.projectItem",
    "description": "<p>The ProjectItem object associated with the sequence.</p> <p>Note</p> <p>Not all sequences will have a <code>projectItem</code>. There may be sequences in a project that Premiere generates that are invisible to the user, these do not have <code>projectItems</code></p>",
    "type": "<p>ProjectItem object; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.sequenceID",
    "description": "<p>The unique identifier assigned to this sequence, at the time of its creation, in the form of <code>xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</code></p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.timebase",
    "description": "<p>The number of ticks per frame in the sequence. Converted to seconds, this is commonly referred to as the frame duration of the sequence.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.videoDisplayFormat",
    "description": "<p>The video display format of the sequence.</p> <p>Set this attribute with the Sequence.setSettings() method.</p>",
    "type": "<p>An enumerated value; read/write. One of:</p> <ul> <li><code>100</code> - 24 Timecode</li> <li><code>101</code> - 25 Timecode</li> <li><code>102</code> - 29.97 Drop Timecode</li> <li><code>103</code> - 29.97 Non-Drop Timecode</li> <li><code>104</code> - 30 Timecode</li> <li><code>105</code> - 50 Timecode</li> <li><code>106</code> - 59.94 Drop Timecode</li> <li><code>107</code> - 59.94 Non-Drop Timecode</li> <li><code>108</code> - 60 Timecode</li> <li><code>109</code> - Frames</li> <li><code>110</code> - 23.976 Timecode</li> <li><code>111</code> - 16mm Feet + Frames</li> <li><code>112</code> - 35mm Feet + Frames</li> <li><code>113</code> - 48 Timecode</li> </ul>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.videoTracks",
    "description": "<p>An array of video Track objects in the sequence.</p>",
    "type": "<p>TrackCollection object; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.zeroPoint",
    "description": "<p>The starting time, in ticks, of the sequence.</p> <p>Set this attribute with the Sequence.setZeroPoint() method.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.attachCustomProperty()",
    "description": "<p>Attaches a custom property, and its value, to the sequence. This property is visible if/when the sequence is exported to FCP XML.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>propertyID</code> String ID of custom property. <code>propertyValue</code> String Value of custom property.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a boolean; <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.autoReframeSequence()",
    "description": "<p>Generates a new, auto-reframed sequence.</p>",
    "type": "",
    "parameters": "<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>numerator</code></p> <p>Integer</p> <p>Numerator of desired frame aspect ratio.</p> <p><code>denominator</code></p> <p>Integer</p> <p>Denominator of desired frame aspect ratio.</p> <p><code>motionPreset</code></p> <p>String</p> <p>One of:</p> <ul> <li><code>slower</code></li> <li><code>default</code></li> <li><code>faster</code></li> </ul> <p><code>newName</code></p> <p>String</p> <p>A name for a newly created sequence.</p> <p><code>useNestedSequences</code></p> <p>Boolean</p> <p>Whether to honor nested sequence.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>The new Sequence object.</p>",
    "example": "<pre><code>var sequence = app.project.activeSequence;\nif (sequence) {\n    var numerator = 1;\n    var denominator = 1;\n    var motionPreset = 'default'; // 'default', 'faster', 'slower'\n    var newName = sequence.name + ', auto-reframed.';\n    var useNestedSequences  = false;\n\n    var newSequence = sequence.autoReframeSequence(numerator, denominator, motionPreset, newName, useNestedSequences);\n\n    if (newSequence) {\n        alert('Created reframed sequence: ' + newName + '.');\n    } else {\n        alert('Failed to create re-framed sequence: ' + newName + '.');\n    }\n} else {\n    alert('No active sequence');\n}\n</code></pre>"
  },
  {
    "section": "sequence",
    "object_name": "Sequence.clone()",
    "description": "<p>Creates a clone, or a duplicate, of the sequence.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Boolean; <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.close()",
    "description": "<p>Closes the sequence.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Boolean; <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.createCaptionTrack()",
    "description": "<p>Creates a caption track in the sequence using caption data from a ProjectItem object.</p>",
    "type": "",
    "parameters": "<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>projectItem</code></p> <p>ProjectItem object</p> <p>A captions source clip (e.g. .srt)</p> <p><code>startAtTime</code></p> <p>Float</p> <p>Offset in seconds from start of sequence</p> <p><code>captionFormat</code></p> <p><code>Sequence.CAPTION_FORMAT_</code> enum</p> <p>Caption format of the new track. Optional, default is <code>Sequence.CAPTION_FORMAT_SUBTITLE</code>. One of:</p> <ul> <li><code>Sequence.CAPTION_FORMAT_SUBTITLE</code> - Subtitle</li> <li><code>Sequence.CAPTION_FORMAT_608</code> - CEA-608</li> <li><code>Sequence.CAPTION_FORMAT_708</code> - CEA-708</li> <li><code>Sequence.CAPTION_FORMAT_TELETEXT</code> - Teletext</li> <li><code>Sequence.CAPTION_FORMAT_OPEN_EBU</code> - EBU Subtitle</li> <li><code>Sequence.CAPTION_FORMAT_OP42</code> - OP-42</li> <li><code>Sequence.CAPTION_FORMAT_OP47</code> - OP-47</li> </ul>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a boolean; <code>true</code> if successful.</p>",
    "example": "<pre><code>app.project.activeSequence.createCaptionTrack(projectItem, 0, Sequence.CAPTION_FORMAT_708);\n</code></pre>"
  },
  {
    "section": "sequence",
    "object_name": "Sequence.createSubsequence()",
    "description": "<p>Creates a new sequence, from the in point to the out point, which is a sub-sequence of the original sequence.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>ignoreTrackTargeting</code> Boolean Whether the new sequence should ignore the track targeting, in the original sequence. Optional, default is <code>false</code>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns the newly-created Sequence object.</p> <p>Note</p> <p>This is not the same as nesting. The newly-created sequence is not inserted back into the original sequence. To nest, see the example function below.</p>",
    "example": "<pre><code>function nestSelection() {\n    var activeSequence = app.project.activeSequence;\n    var selection = activeSequence.getSelection();\n\n    if (!selection.length) {\n        return;\n    }\n\n    var trackId = selection[0].parentTrackIndex;\n    var originalInPoint = activeSequence.getInPointAsTime();\n    var originalOutPoint = activeSequence.getOutPointAsTime();\n    var start = selection[0].start;\n    var end = selection[selection.length - 1].end;\n    activeSequence.setInPoint(start.seconds);\n    activeSequence.setOutPoint(end.seconds);\n\n    var nestedSequence = activeSequence.createSubsequence(true);\n\n    activeSequence.videoTracks[trackId].overwriteClip(nestedSequence.projectItem, start.seconds);\n    activeSequence.setInPoint(originalInPoint.seconds);\n    activeSequence.setOutPoint(originalOutPoint.seconds);\n\n    return nestedSequence;\n}\n</code></pre>"
  },
  {
    "section": "sequence",
    "object_name": "Sequence.exportAsFinalCutProXML()",
    "description": "<p>Creates a new FCP XML representation of the sequence and its constituent media.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>outputPath</code> String The output path for the new FCP XML file.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a boolean; <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.exportAsMediaDirect()",
    "description": "<p>Renders the sequence to the specified output path, using the specified output preset (.epr file), and honoring the specified work area type.</p>",
    "type": "",
    "parameters": "<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>outputPath</code></p> <p>String</p> <p>An output path, to which to render the media.</p> <p><code>presetPath</code></p> <p>String</p> <p>Path to the preset file (.epr file) which contains the encoding settings.</p> <p><code>workAreaType</code></p> <p>Integer</p> <p>The work area type to be rendered (see below). One of:</p> <ul> <li><code>0</code> - Renders the entire sequence.</li> <li><code>1</code> - Renders between the in and out point of the sequence.</li> <li><code>2</code> - Renders the work area of the sequence.</li> </ul>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a boolean; <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.exportAsProject()",
    "description": "<p>Creates a new Project object containing only the given sequence and its constituent media.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>outputPath</code> String The output path for the new project.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a boolean; <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.getExportFileExtension()",
    "description": "<p>Retrieves the file extension associated with the specified output preset (.epr file).</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>outputPresetPath</code> String The output preset to be used.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a string.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.getInPoint()",
    "description": "<p>Retrieves the current sequence in point, in seconds.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a string.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.getInPointAsTime()",
    "description": "<p>Retrieves the current sequence in point.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a Time object.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.getOutPoint()",
    "description": "<p>Retrieves the current sequence out point, in seconds.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a string.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.getOutPointAsTime()",
    "description": "<p>Retrieves the current sequence out point.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a Time object.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.getPlayerPosition()",
    "description": "<p>Retrieves the position of the CTI (Current Time Indicator), in ticks.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a Time object.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.getSelection()",
    "description": "<p>An array of Track item objects, of the selected clips in the sequence, in temporal order.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a TrackItemCollection object.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.getSettings()",
    "description": "<p>Retrieves the settings of the current sequence.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns an object; a sequence settings structure.</p> <p>Property</p> <p>Type</p> <p>Description</p> <p><code>audioChannelCount</code></p> <p>Integer</p> <p>Number of audio channels in the sequence.</p> <p><code>audioChannelType</code></p> <p>Integer</p> <p>Audio channel type. One of:</p> <ul> <li><code>0</code> - Mono</li> <li><code>1</code> - Stereo</li> <li><code>2</code> - 5.1</li> <li><code>3</code> - Multichannel</li> <li><code>4</code> - 4 Channel</li> <li><code>5</code> - 8 Channel</li> </ul> <p><code>audioDisplayFormat</code></p> <p>Integer</p> <p>Audio timecode display format. One of:</p> <ul> <li><code>200</code> - Audio Samples</li> <li><code>201</code> - Milliseconds</li> </ul> <p><code>audioSampleRate</code></p> <p>Time object</p> <p>Audio sample rate.</p> <p><code>autoToneMapEnabled</code></p> <p>Boolean</p> <p>Whether Auto Tone Map Media is checked.</p> <p><code>compositeLinearColor</code></p> <p>Boolean</p> <p>Whether sequence is composited in linear color.</p> <p><code>editingMode</code></p> <p>String</p> <p>The GUID of the editing mode.</p> <p><code>maximumBitDepth</code></p> <p>Boolean</p> <p>Whether sequence is composited at maximum depth.</p> <p><code>maximumRenderQuality</code></p> <p>Boolean</p> <p>Whether sequence is rendered at maximum quality.</p> <p><code>previewCodec</code></p> <p>String</p> <p>Four character code of preview codec in use.</p> <p><code>previewFrameWidth</code></p> <p>Integer</p> <p>Width of preview frame.</p> <p><code>previewFrameHeight</code></p> <p>Integer</p> <p>Height of preview frame.</p> <p><code>previewFileFormat</code></p> <p>Integer</p> <p>Path to the output preset (.epr file) being used for preview file rendering.</p> <p><code>videoDisplayFormat</code></p> <p>Integer</p> <p>Video time display format. One of:</p> <ul> <li><code>100</code> - 24 Timecode</li> <li><code>101</code> - 25 Timecode</li> <li><code>102</code> - 29.97 Drop Timecode</li> <li><code>103</code> - 29.97 Non-Drop Timecode</li> <li><code>104</code> - 30 Timecode</li> <li><code>105</code> - 50 Timecode</li> <li><code>106</code> - 59.94 Drop Timecode</li> <li><code>107</code> - 59.94 Non-Drop Timecode</li> <li><code>108</code> - 60 Timecode</li> <li><code>109</code> - Frames</li> <li><code>110</code> - 23.976 Timecode</li> <li><code>111</code> - 16mm Feet + Frames</li> <li><code>112</code> - 35mm Feet + Frames</li> <li><code>113</code> - 48 Timecode</li> </ul> <p><code>videoFieldType</code></p> <p>Integer</p> <p>Video field type. One of:</p> <ul> <li><code>-1</code> - Default</li> <li><code>0</code> - No Fields (Progressive Scan)</li> <li><code>1</code> - Upper Field First</li> <li><code>2</code> - Lower Field First</li> </ul> <p><code>videoFrameHeight</code></p> <p>Integer</p> <p>Height of sequence video frame.</p> <p><code>videoFrameWidth</code></p> <p>Integer</p> <p>Width of sequence video frame.</p> <p><code>videoPixelAspectRatio</code></p> <p>String</p> <p>Pixel aspect ratio.</p> <p><code>vrHorzCapturedView</code></p> <p>Integer</p> <p>The horizontal captured view, in degrees, for VR.</p> <p><code>vrVertCapturedView</code></p> <p>Integer</p> <p>The vertical captured view, in degrees, for VR.</p> <p><code>vrLayout</code></p> <p>Integer</p> <p>The layout of footage in use, for VR. One of:</p> <ul> <li><code>0</code> - Monoscopic</li> <li><code>1</code> - Stereoscopic - Over/Under</li> <li><code>2</code> - Stereoscopic - Side by Side</li> </ul> <p><code>vrProjection</code></p> <p>Integer</p> <p>The projection type in use, for VR footage. One of:</p> <ul> <li><code>0</code> - None</li> <li><code>1</code> - Equirectangular</li> </ul>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.getWorkAreaInPoint()",
    "description": "<p>Retrieves the current sequence work area in point, in seconds.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a string.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.getWorkAreaInPointAsTime()",
    "description": "<p>Retrieves the current sequence work area in point.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a Time object.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.getWorkAreaOutPoint()",
    "description": "<p>Retrieves the current sequence work area out point, in seconds.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a string.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.getWorkAreaOutPointAsTime()",
    "description": "<p>Retrieves the current sequence work area out point.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a Time object.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.importMGT()",
    "description": "<p>Imports a MOGRT, or an After Effects Motion Graphics Template, to the specified video or audio track, at the specified time.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>path</code> String Full path to a valid MOGRT (.mogrt file), created in After Effects. <code>time</code> String The time at which to insert .mogrt, in ticks. <code>vidTrackOffset</code> Integer How many tracks from the zero-th video track, into which to insert .mogrt content. <code>audTrackOffset</code> Integer How many tracks from the zero-th audio track, into which to insert .mogrt content.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a TrackItem object.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.importMGTFromLibrary()",
    "description": "<p>Imports a MOGRT, or an After Effects Motion Graphics Template, from the current Premiere Pro user's Creative Cloud Libraries, to the specified video or audio track, at the specified time.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>libraryName</code> String The name of Library (from the current PPro user's Creative Cloud Libraries). <code>mgtName</code> String The name of .mogrt within that library. <code>time</code> String The time at which to insert .mogrt, in ticks. <code>vidTrackOffset</code> Integer How many tracks from the zero-th video track, into which to insert .mogrt content. <code>audTrackOffset</code> Integer How many tracks from the zero-th audio track, into which to insert .mogrt content.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a TrackItem object.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.insertClip()",
    "description": "<p>Inserts a clip into the sequence, on the specified video and audio tracks, at the specified time.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>projectItem</code> ProjectItem object A project item from which to get media. <code>time</code> Time The time at which to add project item. <code>vTrackIndex</code> Integer The (zero-based) track index, into which to insert video. <code>aTrackIndex</code> Integer The (zero-based) track index, into which to insert audio.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a boolean; <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.isDoneAnalyzingForVideoEffects()",
    "description": "<p>Returns whether or not the sequence is done analyzing for video effects.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a boolean.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.isWorkAreaEnabled()",
    "description": "<p>Returns whether or not the sequence work area bar is enabled.</p> <p>Note</p> <p>The work area bar is disabled by default. To enable it, check 'Work Area Bar' in the sequence hamburger menu.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a boolean.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.linkSelection()",
    "description": "<p>Links the selected video and audio clips in the sequence.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a boolean; <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.overwriteClip()",
    "description": "<p>Inserts a clip into the sequence, overwriting existing clips, on the specified video and audio tracks, at the specified time.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>projectItem</code> ProjectItem object A project item from which to get media. <code>time</code> String The time at which to add project item, in seconds. <code>vTrackIndex</code> Integer The (zero-based) track index, into which to insert video. <code>aTrackIndex</code> Integer The (zero-based) track index, into which to insert audio.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a boolean; <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.performSceneEditDetectionOnSelection()",
    "description": "<p>Performs cut detection on the sequence selection.</p>",
    "type": "",
    "parameters": "<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>actionDesired</code></p> <p>String</p> <p>One of:</p> <ul> <li><code>CreateMarkers</code></li> <li><code>ApplyCuts</code></li> </ul> <p><code>applyCutsToLinkedAudio</code></p> <p>Boolean</p> <p>Whether to apply detected cuts on linked audio.</p> <p><code>sensitivity</code></p> <p>String</p> <p>One of:</p> <ul> <li><code>LowSensitivity</code></li> <li><code>MediumSensitivity</code></li> <li><code>HighSensitivity</code></li> </ul>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a boolean; <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.setInPoint()",
    "description": "<p>Sets a new sequence in point.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>time</code> Integer or Time object A new time in seconds.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Null.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.setOutPoint()",
    "description": "<p>Sets a new sequence out point.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>time</code> Integer or Time object A new time in seconds.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Null.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.setPlayerPosition()",
    "description": "<p>Sets the position of the CTI (Current Time Indicator) in the sequence.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>time</code> String A new time in ticks.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a boolean; <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.setSettings()",
    "description": "<p>Sets the settings of the current sequence.  [Editorial: I apologize for any perceived pedantry; sometimes, obvious documentation needs to be obvious. -bbb]</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>sequenceSettings</code> <code>Object</code> A sequence settings object, obtained via Sequence.getSettings().",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a boolean; <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.setWorkAreaInPoint()",
    "description": "<p>Sets a new sequence work area in point.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>time</code> Integer or Time object A new time in seconds.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a boolean; <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.setWorkAreaOutPoint()",
    "description": "<p>Sets a new sequence work area out point.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>time</code> Integer or Time object A new time in seconds.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a boolean; <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.unlinkSelection()",
    "description": "<p>Unlinks the selected video and audio clips in the sequence.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a boolean; <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Sequence.setZeroPoint()",
    "description": "<p>Set the starting time of the sequence.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>newZeroPoint</code> String The new zero point in ticks.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns a boolean; <code>true</code> if successful.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Track object",
    "description": "<p>The Track object represents a video or audio track, within a Sequence object.</p>",
    "type": "",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Track.clips",
    "description": "<p>An array of Track item objects, contained within the track, in temporal order.</p>",
    "type": "<p>TrackItemCollection object, read-only;</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Track.id",
    "description": "<p>This is the ordinal assigned to the track, upon creation.</p>",
    "type": "<p>Integer, read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Track.mediaType",
    "description": "<p>The type of media, contained in this track.</p>",
    "type": "<p>String, read-only. One of:</p> <ul> <li><code>Audio</code></li> <li><code>Video</code></li> </ul>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Track.name",
    "description": "<p>The name of the track.</p>",
    "type": "<p>String; read-only.</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Track.transitions",
    "description": "<p>An array of transitions objects, contained within the track, in temporal order.</p>",
    "type": "<p>TrackItemCollection object, read-only;</p>",
    "parameters": "",
    "methods": "",
    "attributes": "",
    "returns": "",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Track.insertClip()",
    "description": "<p>Adds a 'clip' (media segment from a ProjectItem object) to the track, at the specified time. Media will be inserted, at that time.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>projectItem</code> ProjectItem object A project item from which to get media. <code>time</code> String The time at which to add project item, in ticks. <code>vTrackIndex</code> Integer The (zero-based) track index, into which to insert video. <code>aTrackIndex</code> Integer The (zero-based) track index, into which to insert audio.",
    "methods": "",
    "attributes": "",
    "returns": "<p>None.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Track.isMuted()",
    "description": "<p>Retrieves the current mute state, of the track.</p>",
    "type": "",
    "parameters": "<p>None.</p>",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code> if track is currently muted; <code>false</code> if not.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Track.overwriteClip()",
    "description": "<p>Adds a 'clip' (media segment from a ProjectItem object) to the track, at the specified time. This will overwrite any existing media, at that time.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>projectItem</code> ProjectItem object A project item from which to get media. <code>time</code> String The time at which to add project item, in ticks.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>true</code>.</p>",
    "example": ""
  },
  {
    "section": "sequence",
    "object_name": "Track.setMute()",
    "description": "<p>Sets the mute state, of the track.</p>",
    "type": "",
    "parameters": "Parameter Type Description <code>isMuted</code> Integer If <code>1</code>, mute the track. If <code>0</code>, the track will be unmuted.",
    "methods": "",
    "attributes": "",
    "returns": "<p>Returns <code>0</code> if successful.</p>",
    "example": ""
  }
]